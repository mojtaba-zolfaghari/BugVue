#pragma checksum "C:\Users\Mojtaba\Desktop\TestVueJs\BugVue\BugVue\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1876f8ffe4f7531531a6ea24b0134151a88701cc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1876f8ffe4f7531531a6ea24b0134151a88701cc", @"/Views/Home/Index.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/vue/vue.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 5190, true);
            WriteLiteral(@"

<div id=""app"">


    <button class=""btn btn-primary"" v-on:click=""showNewBugModal"">Add New Bug ... </button>
    <input type=""text"" value="""" class=""keyboardInput"">

    <table class=""table"">
        <thead>
            <tr>
                <th>#</th>
                <th>Name</th>
                <th>Description</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr v-for=""(bug,index) in bugs"">
                <td>{{index+1}}</td>
                <td>{{bug.name}}</td>
                <td>{{bug.description}}</td>
                <td>
                    <button class=""btn btn-danger"" v-on:click=""ShowDeleteBugModal(bug,index)"">Remove</button>
                    <button class=""btn btn-warning"" v-on:click=""showeditmodal(bug,index)"">Edit</button>

                </td>
            </tr>
        </tbody>
    </table>


    <div class=""modal fade"" id=""AddBugModal"" tabindex=""-1"" role=""dialog"">
        <div class=""modal-dialog"" role=""document");
            WriteLiteral(@""">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"">Add New Bug</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <div class=""form-group"">
                        <label for=""Name"">Name</label>
                        <input v-model=""name"" type=""text"" class=""form-control"" style=""width:100%"" />
                    </div>
                    <div class=""form-group"">
                        <label for=""Description"">Description</label>
                        <input v-model=""description"" type=""text"" class=""form-control"" style=""width:100%"" />
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-sec");
            WriteLiteral(@"ondary"" data-dismiss=""modal"">Close</button>
                    <button type=""button"" v-on:click=""addBugs"" class=""btn btn-primary"">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <div class=""modal fade"" id=""EditBugModal"" tabindex=""-1"" role=""dialog"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"">Edit Bug</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <div class=""form-group"">
                        <label for=""Name"">Name</label>
                        <input v-model=""name"" type=""text"" class=""form-control"" style=""width:100%"" />
                    </div>
                    <div class=");
            WriteLiteral(@"""form-group"">
                        <label for=""Description"">Description</label>
                        <input v-model=""description"" type=""text"" class=""form-control"" style=""width:100%"" />
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
                    <button type=""button"" v-on:click=""editBugs"" class=""btn btn-primary"">Save Edited Feilds</button>
                </div>
            </div>
        </div>
    </div>

    <div class=""modal fade"" id=""DeleteBugModal"" tabindex=""-1"" role=""dialog"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"">Delete Bug</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>");
            WriteLiteral(@"
                    </button>
                </div>
                <div class=""modal-body"">
                    <p class=""text-info"">Are You Sure Want To Delete This Record ?</p>
                    <div class=""form-group"">
                        <label for=""Name"">Name</label>
                        <input v-model=""name"" disabled=""disabled"" type=""text"" class=""form-control"" style=""width:100%"" />
                    </div>
                    <div class=""form-group"">
                        <label for=""Description"">Description</label>
                        <input v-model=""description"" disabled=""disabled"" type=""text"" class=""form-control"" style=""width:100%"" />
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
                    <button type=""button"" v-on:click=""removeBug(bug,index)"" class=""btn btn-primary"">Yes Delete It</button>
                ");
            WriteLiteral("</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(5207, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(5213, 44, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1876f8ffe4f7531531a6ea24b0134151a88701cc8871", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5257, 4253, true);
                WriteLiteral(@"
    <script src=""http://unpkg.com/portal-vue""></script>
    <script>
        var app = new Vue({
            el: ""#app"",
            data: {
                bugs: [],
                name: """",
                description: """",
                bugId: null,
                bugIndex: null
            },
            created: function () {
                this.getBugs();
            },
            methods: {
                ShowDeleteBugModal: function (bug, index) {
                    this.bugIndex = index;

                    this.bugId = bug.id;
                    this.name = bug.name;
                    this.description = bug.description;

                    $(""#DeleteBugModal"").modal(""show"");

                },
                removeBug: function (bug, index) {
                    var vm = this;
                    $.ajax({ url: ""/bug"", data: bug, method: ""DELETE"" })
                        .done(function (data) {
                            vm.bugs.splice(index, 1);
     ");
                WriteLiteral(@"                       toastr.success(""Deleted ! "");
                        })
                        .fail(function () {
                            toastr.fail(""Delete Not Complete ! "");
                        })
                        .always(function () {
                            vm.name = """";
                            vm.description = """";
                            $(""#EditBugModal"").modal(""hide"");

                        });


                },
                showeditmodal: function (bug, index) {
                    this.bugIndex = index;

                    this.bugId = bug.id;
                    this.name = bug.name;
                    this.description = bug.description;

                    $(""#EditBugModal"").modal(""show"");

                },
                editBugs: function () {
                    var vm = this;
                    var newBug = {
                        id: vm.bugId,
                        name: vm.name,
                        desc");
                WriteLiteral(@"ription: vm.description
                    }

                    $.ajax({ url: ""/bug"", data: newBug, method: ""PUT"" })
                        .done(function () {

                            vm.bugs[vm.bugIndex].name = vm.name;
                            vm.bugs[vm.bugIndex].description = vm.description;
                            toastr.success(""Success Edited !"");

                        }).fail(function () {
                            toastr.error(""Error Happen !"");

                        }).always(function () {
                            vm.name = """";
                            vm.description = """";
                            $(""#EditBugModal"").modal(""hide"");

                        });
                },




                showNewBugModal: function () {
                    $(""#AddBugModal"").modal(""show"");
                },
                addBugs: function () {
                    var vm = this;

                    var newBug = {
                        name: ");
                WriteLiteral(@"vm.name,
                        description: vm.description
                    }

                    $.ajax({ url: ""/bug"", data: newBug, method: ""POST"" })
                        .done(function (data) {
                            vm.bugs.splice(0, 0, newBug);
                            toastr.success(""Done"");

                        }).fail(function () {
                            toastr.error(""Error Happend !"");
                        }).always(function () {
                            vm.name = """";
                            vm.description = """";
                            $(""#AddBugModal"").modal(""hide"");
                        });
                },




                getBugs: function () {
                    var vm = this;

                    $.ajax({ url: ""/bug"", method: ""GET"" })
                        .done(function (data) {
                            vm.bugs = data;
                            toastr.info(""Success"");
                        }).fail(function ()");
                WriteLiteral(" {\r\n                            toastr.error(\"Error\");\r\n                        });\r\n                }\r\n            }\r\n        }\r\n        );\r\n    </script>\r\n");
                EndContext();
            }
            );
            BeginContext(9513, 2, true);
            WriteLiteral("\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
